
Create a few test functions to ensure correctness:

passed    - test1: main spawns one child and waits for it to terminate. worker calls exit.
passed    - test2: main spawns two children and each yield correctly.

passed   - test3: test1 union (main needs to see the return value). worker calls exit.
passed   - test4: main spawns two children and waits for both to end and verifies return vals.

- After ensuring correctness of logical flow for Library functions, test mutual exclusion.
    - test1: main creates locks, uses it, and deletes it.
    - test2: main creates two locks, uses both, deletes both - list should work
    - test3: test2 + another lock
    - test4: main spawns two threads, both compete for locks, main joins both.

= Note that some bugs may only be uncovered after preemption is uncovered.
    - That is why a logical overview will require careful logical scrutiny